#if !defined(TERMDRAW_INIT)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                       RetroZ termdraw library                           ;;
;;                                                                         ;;
;; Version: 0.5.0                                                          ;;
;; https://github.com/formix/RetroZ-bios                                   ;;
;; By J.P. Gravel <jeanphilippe.gravel@gmail.com>                          ;;
;; 2019-09-25                                                              ;;
;;                                                                         ;;
;; Terminal drawing library                                                ;;
;;                                                                         ;;
;;  - SET_COLOR: Sets the color for the next characters.                   ;;
;;  - SET_ATTRIBUTE: Sets the display attibute for the next characters.    ;;
;;  - SET_POS: Sets the position of the cursor.                            ;;
;;  - DRAW_LINE: Draws a line between plus signs.       Ex: +-----+        ;;
;;  - DRAW_ROW: Draws two pipes for a given row length. Ex: |     |        ;;
;;  - DRAW_RECT: Draws a rectagle made of DRAW_LINEs and DRAW_ROWs         ;;
;;                                                                         ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


ESC             EQU     27

COLOR_BLACK     EQU     "0"
COLOR_RED       EQU     "1"
COLOR_GREEN     EQU     "2"
COLOR_YELLOW    EQU     "3"
COLOR_BLUE      EQU     "4"
COLOR_MAGENTA   EQU     "5"
COLOR_CYAN      EQU     "6"
COLOR_WHITE     EQU     "7"

ATTR_RESET      EQU     "0"
ATTR_BRIGHT     EQU     "1"
ATTR_DIM        EQU     "2"
ATTR_UNDERSCORE EQU     "4"
ATTR_BLINK      EQU     "5"
ATTR_REVERSE    EQU     "7"
ATTR_HIDDEN     EQU     "8"


#data           _HEAP
STR_POS         DEFS    4


#CODE           _MAIN

TERMDRAW_INIT:  RET

; ***************************************************************************
; Sets the foreground and background colors.
;       Param 1: Foreground (byte)
;       Param 2: Background (byte)
;
;       Colors are:
;               COLOR_BLACK
;               COLOR_RED
;               COLOR_GREEN
;               COLOR_YELLOW
;               COLOR_BLUE
;               COLOR_MAGENTA
;               COLOR_CYAN
;               COLOR_WHITE     
; ***************************************************************************
SET_COLOR:      LD      IX,0
                ADD     IX,SP
                LD      A,ESC
                CALL    OUTC
                LD      A,"["
                CALL    OUTC
                LD      A,"3"
                CALL    OUTC
                LD      A,(IX+2)
                CALL    OUTC
                LD      A,";"
                CALL    OUTC
                LD      A,"4"
                CALL    OUTC
                LD      A,(IX+3)
                CALL    OUTC
                LD      A,"m"
                CALL    OUTC
                RET

                
; ***************************************************************************
; Sets the display attribute.
;       Param 1: Display attribute (byte)
;
;       Attributes are:
;               ATTR_RESET
;               ATTR_BRIGHT
;               ATTR_DIM
;               ATTR_UNDERSCORE
;               ATTR_BLINK
;               ATTR_REVERSE
;               ATTR_HIDDEN
; ***************************************************************************
SET_ATTRIBUTE:  LD      IX,0
                ADD     IX,SP
                LD      A,ESC
                CALL    OUTC
                LD      A,"["
                CALL    OUTC
                LD      A,(IX+2)
                CALL    OUTC
                LD      A,"m"
                CALL    OUTC
                RET


; ***************************************************************************
; Sets the cursor postion
;       Param 1: row (byte)
;       Param 2: col (byte)
; ***************************************************************************
SET_POS:        LD      IX,0
                ADD     IX,SP

                ;Start the VT102 sequence
                LD      A,ESC
                CALL    OUTC
                LD      A,"["
                CALL    OUTC

                ;Print the row
                CALL    ENFRAME
                LD      HL,10
                PUSH    HL              ;Push the base on the stack
                LD      L,(IX+2)
                LD      H,0
                PUSH    HL              ;Push the row on the stack
                LD      HL,STR_POS
                PUSH    HL              ;Push the target string
                CALL    ITOA
                CALL    PRINT           ;Print the row string value
                POP     HL              ;Pop the target string (itoa)
                POP     HL              ;Pop the row (itoa)
                POP     HL              ;Pop the base (itoa)
                CALL    DEFRAME

                ;Print the VT102 row-col separator
                LD      A,";"
                CALL    OUTC

                ;Print the col
                LD      HL,10
                PUSH    HL              ;Push the base on the stack
                LD      L,(IX+3)
                LD      H,0
                PUSH    HL              ;Push the col on the stack
                LD      HL,STR_POS
                PUSH    HL              ;Push the target string
                CALL    ITOA
                CALL    PRINT           ;Print the col string value
                POP     HL              ;Pop the target string (itoa)
                POP     HL              ;Pop the col (itoa)
                POP     HL              ;Pop the base (itoa)
        
                ;Print the VT102 set position terminal char
                LD      A,"H"
                CALL    OUTC
                RET



; ***************************************************************************
; Draws a line surrounded by plus signs (+-----+) at the given row, col and
; for a given length.
;       Param 1: row (byte)
;       Param 2: col (byte)
;       Param 3: length (word)
; ***************************************************************************
DRAW_LINE:      LD      IX,0
                ADD     IX,SP
                LD      DE,(IX+2)       ;E contains row, D contains col.
                
                CALL    ENFRAME
                PUSH    DE
                CALL    SET_POS         ;Sets the cursor position
                POP     DE
                CALL    DEFRAME

                LD      A,"+"           ;Print the first corner
                CALL    OUTC
                LD      A,(IX+4)        ;Load the length in A
                SUB     2
                LD      C,A             ;Initialize the counter
                LD      A,"-"
DRAW_LINE_CORE: CALL    OUTC            ;Print the core of the line
                DEC     C
                JP      NZ,DRAW_LINE_CORE       ;Loop to print the next "-".
                LD      A,"+"
                CALL    OUTC            ;Draw the second corner char.
                RET


; ***************************************************************************
; Draws a framed row (|     |) at row (D) and col (E) of length (L). Note
; that the content of the row between the pipes (|) is not erased.
;       Param 1: row (byte)
;       Param 2: col (byte)
;       Param 3: length (byte)
; ***************************************************************************
DRAW_ROW:       LD      IX,0
                ADD     IX,SP
                LD      HL,(IX+2)       ;Load row in L and col in H

                CALL    ENFRAME
                PUSH    HL
                CALL    SET_POS         ;Sets the cursor position
                POP     HL
                CALL    DEFRAME

                LD      A,"|"
                CALL    OUTC            ;Draws the left hand pipe.

                LD      A,(IX+4)        ;Loads the length in A
                ADD     H               ;Add the length to the col
                DEC     A               ;Substract 1 (for the first pipes)
                LD      H,A             ;Put the right pipe col value in L
                
                PUSH    HL
                CALL    SET_POS         ;Sets the cursor position to (b,E+L-1).
                POP     HL

                LD      A,"|"
                CALL    OUTC            ;Draws the right hand pipe.
                RET



; ***************************************************************************
; Draws a rectangle at row (D) and col (E) of height (H) and length (L).
;       Param 1: row (byte)
;       Param 2: col (byte)
;       Param 3: length (byte)
;       Param 4: Height (byte)
; ***************************************************************************
DRAW_RECT:      LD      IX,0
                ADD     IX,SP

                LD      HL,(IX+2)       ;Load col in H and row in L
                LD      DE,(IX+4)       ;Load height in D and length in E
                LD      C,D             ;Set the line counter in C
                LD      A,0             
                CP      C               ;Check if height is 0
                RET     Z               ;Return if the height is 0

                CALL    ENFRAME
                PUSH    DE              ;height and length are on the stack
                PUSH    HL              ;col and row are on the stack
                CALL    DRAW_LINE       ;Draw the line
                POP     HL              ;Clean the stack
                POP     DE              ;Clean the stack
                CALL    DEFRAME

                DEC     C               ;First line written
                RET     Z               ;Return if no more line to write

DRAW_RECT_NEXT_ROW:
                INC     L               ;Increment the line
                DEC     C               ;Remove the line we will print
                JR      Z,DRAW_RECT_LAST_LINE ;Draw the bottom line
                
                CALL    ENFRAME
                PUSH    DE              ;height and length are on the stack
                PUSH    HL              ;col and row are on the stack
                CALL    DRAW_ROW        ;Draw the row
                POP     HL              ;Clean the stack
                POP     DE              ;Clean the stack
                CALL    DEFRAME

                JR      DRAW_RECT_NEXT_ROW

DRAW_RECT_LAST_LINE:
                CALL    ENFRAME
                PUSH    DE              ;height and length are on the stack
                PUSH    HL              ;col and row are on the stack
                CALL    DRAW_LINE       ;Draw the line
                POP     HL              ;Clean the stack
                POP     DE              ;Clean the stack
                CALL    DEFRAME

                RET

#endif
